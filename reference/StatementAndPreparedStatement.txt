1.以下摘自java官网的一篇文章《The Java Tutorials：Using Prepared Statements》
  网址：http://download.oracle.com/javase/tutorial/index.html
  Sometimes it is more convenient to use a PreparedStatement object for sending SQL statements 
  to the database. This special type of statement is derived from the more general class, Statement, 
  that you already know.
  
  If you want to execute a Statement object many times, it usually reduces execution time to use a 
  PreparedStatement object instead.

  The main feature of a PreparedStatement object is that, unlike a Statement object, 
  it is given a SQL statement when it is created. The advantage to this is that in most cases, 
  this SQL statement is sent to the DBMS right away, where it is compiled. As a result, 
  the PreparedStatement object contains not just a SQL statement, but a SQL statement 
  that has been precompiled. This means that when the PreparedStatement is executed, 
  the DBMS can just run the PreparedStatement SQL statement without having to compile it first.

  Although PreparedStatement objects can be used for SQL statements with no parameters, 
  you probably use them most often for SQL statements that take parameters. The advantage of 
  using SQL statements that take parameters is that you can use the same statement and 
  supply it with different values each time you execute it. 
  上面的主要意思，我是这样理解的：
  第3段：
  相对于Statement，PreparedStatement是预编译的，一旦该PreparedStatement被再次请求，不需要再编译了，
  所以可以节省时间，有点儿像函数和存储过程吧。现在问题是：这个预编译是否跨PreparedStatement（也即跨Connection）的，
  也就是说当PreparedStatement关闭（或者Connection关闭），重新创建一个PreparedStatement（或者新得到
  一个Connection，然后再创建一个PreparedStatement），数据库是否仍然需要编译该PreparedStatement（目前我认为
  不编译的可能性比较大），如果仍需要重新编译，那就不是跨PreparedStatement（也即跨Connection）的。
  如果是跨PreparedStatement的（可能性比较大），那么也可以使用拼sql串，传无参数的sql给它，反正执行比Statement快，
  无需重新编译嘛，对于相同sql，相同参数的多次查询，的确是这样的，但对于相同的sql，不同参数的查询多次查询，
  一次一个不同的sql串，数据库根据传过来的sql串来决定是否编译，如果对不同的字符串就编译一次，那这样做是没有效果的，
  只能使用有参数的形式来做。
  第4段：
  使用有参的PreparedStatement的一个非常肯定的优势在于：仅创建和使用一个PreparedStatement对象（这就是优势），
  每次执行，只要修改参数值就可。比较典型的情形就是，在一个循环中，使用同一个PreparedStatement对象，只是每次
  执行前，修改一下参数值。但实际使用中，这种情形太少了（在一次数据库的查询或更新中这么使用），可以忽略掉。
  为更好的理解上面两段，有篇文字要看一下，见《Oracle 9i&10g编程艺术》P10 1.3.1的2“使用绑定变量”。
2.有篇帖子，对statement和preparedstatement讨论了好多，可以好好看看，我的一些理解也是来源于这个帖子的讨论。
  主题：PreparedStatement真的比Statement快吗？
  网址：http://ivanl.javaeye.com/blog/49129
3.有一个摘自网络的Q&A
Q: Why it is better to use PreparedStatement?
A: Prepared statements are more efficient for managing database actions because 
   they give the driver and the database system itself the opportunity to optimise the queries, 
   and to re-use them. Although the parameters of the query, update or insert may change, 
   the more often the prepared statement is used, the greater the potential saving. 
4.一般的，数据库在执行查询时，要经历sql语句分析、sql语句翻译、优化并产生执行计划、执行四个阶段。
  上面语句的详情参见《数据库系统概念》13.1节
  一般情况下，第一次执行preparedstatement后，再次执行preparedstatement操作时，就不用执行前三个阶段了。
  上面语句的意思来自网上的一篇文章《What is the difference between a Statement and a PreparedStatement?》
5.对于preparedstatement，有的数据库的JDBC的实现是专门做了处理的，所以是可以提高性能的，比如oracle的JDBC，
  而有的数据库的JDBC的实现直接用了statement的实现，所以并没有提高性能。即使有的数据库的JDBC的实现是专门做了处理的，
  其实现方式也可能不一样，同样的对preparedstatement的使用，产生的性能结果也是不一样的。
6.我自己想到一个preparedStatement比statement的好处：
  使用preparedStatement写出来的程序不是原始的sql，而是使用了标准的JDBC Type（同样也有标准的JDBC函数等），所以从
  某种意义上来说，它是跨数据库的；而使用statement写出来的程序是原始的SQL，使用专用的SQL Type和专用的函数，仅仅适用
  于一种数据库。